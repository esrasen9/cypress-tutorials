[{"/Users/esrasen/Documents/cypress-crash-course/project-1/src/index.tsx":"1","/Users/esrasen/Documents/cypress-crash-course/project-1/src/reportWebVitals.ts":"2","/Users/esrasen/Documents/cypress-crash-course/project-1/src/App.tsx":"3","/Users/esrasen/Documents/cypress-crash-course/project-1/src/components/SideNav/SideNav.tsx":"4","/Users/esrasen/Documents/cypress-crash-course/project-1/src/components/Habit/Habit.tsx":"5","/Users/esrasen/Documents/cypress-crash-course/project-1/src/components/Accomplishment/Accomplishment.tsx":"6","/Users/esrasen/Documents/cypress-crash-course/project-1/src/components/Elements/Elements.tsx":"7","/Users/esrasen/Documents/cypress-crash-course/project-1/src/components/Modal/Modal.tsx":"8","/Users/esrasen/Documents/cypress-crash-course/project-1/src/components/HabitCard/HabitCard.tsx":"9"},{"size":500,"mtime":1622072781000,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1622072781000,"results":"12","hashOfConfig":"11"},{"size":922,"mtime":1653999045764,"results":"13","hashOfConfig":"11"},{"size":707,"mtime":1622072781000,"results":"14","hashOfConfig":"11"},{"size":944,"mtime":1622072781000,"results":"15","hashOfConfig":"11"},{"size":4157,"mtime":1654082453306,"results":"16","hashOfConfig":"11"},{"size":1852,"mtime":1653998014180,"results":"17","hashOfConfig":"11"},{"size":1837,"mtime":1622072781000,"results":"18","hashOfConfig":"11"},{"size":1352,"mtime":1622072781000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1mqw07l",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/esrasen/Documents/cypress-crash-course/project-1/src/index.tsx",[],["43","44"],"/Users/esrasen/Documents/cypress-crash-course/project-1/src/reportWebVitals.ts",[],"/Users/esrasen/Documents/cypress-crash-course/project-1/src/App.tsx",["45"],"import './App.css';\nimport SideNav from './components/SideNav/SideNav';\nimport Habit from \"./components/Habit/Habit\"\nimport Accomplishment from './components/Accomplishment/Accomplishment';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport Rewards from './components/Rewards/Rewards';\nimport Elements from './components/Elements/Elements';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <div className=\"App-container\">\n          <SideNav />\n          <Switch>\n            <Route strict exact path=\"/habits\" component={Habit} />\n            <Route strict exact path=\"/accomplishments\" component={Accomplishment} />\n            {/* <Route strict exact path=\"/rewards\" component={Rewards} /> */}\n            <Route strict exact path=\"/elements\" component={Elements} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/esrasen/Documents/cypress-crash-course/project-1/src/components/SideNav/SideNav.tsx",[],"/Users/esrasen/Documents/cypress-crash-course/project-1/src/components/Habit/Habit.tsx",["46","47"],"import React, { useState, useEffect } from 'react'\nimport HabitCard from '../HabitCard/HabitCard'\nimport Modal from \"../Modal/Modal\"\nimport \"./Habit.css\"\nimport axios from \"axios\"\n\ntype IState = {\n    _id: string;\n    habit: string;\n    completed: boolean;\n}[]\n\nfunction Habit() {\n\n    const [habits, setHabits] = useState<IState>([]);\n    console.log(habits, \"habits\")\n\n    return (\n        <div className=\"Habit\">\n            <div className=\"Habit__heading-container\">\n                <h2 className=\"Habit-header\">Habit Checklist</h2>\n                <Modal \n                    habits={habits}\n                    setHabits={setHabits}\n                />\n            </div>\n            <div className=\"Habit-cards-container\">\n                {habits.map(habit => {\n                    return <HabitCard habit={habit} setHabits={setHabits} habits={habits}/>\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Habit\n","/Users/esrasen/Documents/cypress-crash-course/project-1/src/components/Accomplishment/Accomplishment.tsx",["48"],"/Users/esrasen/Documents/cypress-crash-course/project-1/src/components/Elements/Elements.tsx",[],"/Users/esrasen/Documents/cypress-crash-course/project-1/src/components/Modal/Modal.tsx",["49"],"import { useState } from \"react\"\nimport { Modal, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport { v4 as uuid } from \"uuid\"\n\ninterface IProps {\n  habits: {\n    _id: string,\n    habit: string,\n    completed: boolean\n  }[],\n  setHabits: React.Dispatch<React.SetStateAction<{\n      _id: string,\n      habit: string;\n      completed: boolean;\n  }[]>>\n}\n\ntype Habit = {\n  _id: string,\n  habit: string,\n  completed: boolean\n}\n\nfunction AddModal({ habits, setHabits }: IProps) {\n    const [show, setShow] = useState(false);\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [habit, setHabit] = useState(\"\")\n\n    const handleAdd = async () => {\n      if(habit){\n        setHabits([\n          ...habits,\n          {\n            _id: uuid(),\n            habit,\n            completed: false\n          }\n        ]);\n        setShow(false);\n        setHabit(\"\")\n      }\n    }\n  \n    return (\n      <>\n        <button onClick={handleShow} className=\"Habit-add-btn\" id=\"habit-add-btn\">Add</button>\n  \n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add a new habit</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                placeholder=\"Habit\"\n                onChange={(e) => {setHabit(e.target.value)}}\n                value={habit}\n              />\n            </InputGroup>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleAdd}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n  \nexport default AddModal","/Users/esrasen/Documents/cypress-crash-course/project-1/src/components/HabitCard/HabitCard.tsx",["50","51","52"],"import React, { useState } from 'react'\nimport \"./HabitCard.css\"\nimport close from \"../../svg/close.svg\"\nimport check from \"../../svg/check.svg\"\n\ninterface IProps {\n    habit: {\n        _id: string,\n        habit: string,\n        completed: boolean\n    },\n    habits: {\n        _id: string,\n        habit: string,\n        completed: boolean\n    }[],\n    setHabits: React.Dispatch<React.SetStateAction<{\n        _id: string,\n        habit: string;\n        completed: boolean;\n    }[]>>\n}\n\nfunction HabitCard({ habit, setHabits, habits }: IProps) {\n\n    const [complete, setComplete] = useState(false)\n\n    return (\n        <div className=\"HabitCard\" onClick={() => {\n            let newHabits = habits.map(updatedHabit => {\n                if(updatedHabit._id === habit._id){\n                    return {\n                        ...habit,\n                        completed: !habit.completed\n                    }\n                } else return updatedHabit\n            });\n            setHabits(newHabits)\n        }}>\n            <div className=\"HabitCard__completion-container\">\n                <img className=\"HabitCard__completion-icon\" src={habit.completed ? check : close}/>\n            </div>\n            <div className=\"HabitCard__habit-container\">\n                {habit.habit}\n            </div>\n        </div>\n    )\n}\n\nexport default HabitCard\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":15},{"ruleId":"57","severity":1,"message":"61","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"62","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":13},{"ruleId":"63","severity":1,"message":"64","line":81,"column":33,"nodeType":"65","endLine":81,"endColumn":85},{"ruleId":"57","severity":1,"message":"66","line":18,"column":6,"nodeType":"59","messageId":"60","endLine":18,"endColumn":11},{"ruleId":"57","severity":1,"message":"67","line":26,"column":12,"nodeType":"59","messageId":"60","endLine":26,"endColumn":20},{"ruleId":"57","severity":1,"message":"68","line":26,"column":22,"nodeType":"59","messageId":"60","endLine":26,"endColumn":33},{"ruleId":"63","severity":1,"message":"64","line":41,"column":17,"nodeType":"65","endLine":41,"endColumn":100},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"@typescript-eslint/no-unused-vars","'Rewards' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Habit' is defined but never used.","'complete' is assigned a value but never used.","'setComplete' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]